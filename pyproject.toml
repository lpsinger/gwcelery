[tool.poetry]
name = "gwcelery"
version = "0.0.0"
description = "Hipster pipeline for annotating LIGO events"
readme = "README.rst"
authors = ["Leo Singer <leo.singer@ligo.org>"]
license = "GPL-2.0+"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Internet",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics"
]
homepage = "https://git.ligo.org/emfollow/gwcelery"
repository = "https://git.ligo.org/emfollow/gwcelery"
documentation = "https://gwcelery.readthedocs.io/"
include = [
    "CHANGES.rst",
    "CONTRIBUTING.rst",
    "doc",
    "docs-requirements.txt",
    "gwcelery/static/*.css",
    "gwcelery/static/vega/*.html",
    "gwcelery/templates/*.jinja2",
    "gwcelery/data/*.sub",
    "gwcelery/data/first2years/*.xml.gz",
    "gwcelery/tests/data/*.html",
    "gwcelery/tests/data/*.json",
    "gwcelery/tests/data/*.xml",
    "gwcelery/tests/data/*.xml.gz",
    "gwcelery/tests/data/llhoft/*/*.gwf",
    "gwcelery/tests/data/llhoft/*/*/*.gwf",
    "gwcelery/tests/data/*.pickle",
    "gwcelery/tests/data/*.hdf5"
]

[tool.poetry.urls]
"Bug Tracker" = "https://git.ligo.org/emfollow/gwcelery/issues"

[tool.poetry.dependencies]
python = "^3.8"
astropy = ">=4.3.1"  # https://github.com/astropy/astropy/issues/11879
bilby-pipe = ">=1.0.6"
celery = {version = ">=5.1", extras = ["redis"]}
click = ">=7"
comet = "*"
corner = "*"
dnspython = "*"  # silence "DNS: dnspython not found. Can not use SRV lookup." warning from SleekXMPP
flask = "*"
flask-caching = "*"
gracedb-sdk = ">=0.1.5"
gwdatafind = ">=1.1.1"
gwpy = ">=2.0.1"  # https://github.com/gwpy/gwpy/issues/1277
healpy = "*"
igwn-alert = "*"
imapclient = "*"
importlib-metadata = { version = "*", python = "<3.8" }
jinja2 = ">=2.11.2"  # https://github.com/pallets/jinja/issues/1168
lalsuite = ">=6.82"  # https://git.ligo.org/lscsoft/lalsuite/-/issues/414
ligo-followup-advocate = ">=1.1.6"
ligo-gracedb = ">=2.7.5"  # https://git.ligo.org/lscsoft/gracedb-client/-/issues/28
ligo-raven = ">=2.0"
ligo-segments = "*"
"ligo.em-bright" = ">=1.0"
"ligo.skymap" = ">=0.4.0"
lscsoft-glue = "*"
lxml = "*"
numpy = "*"
p-astro = ">=1.0"
pesummary = "*"
pygcn = ">=1.0.1"
python-ligo-lw = "~1.7.0"  # https://git.ligo.org/lscsoft/ligo.skymap/-/merge_requests/255
safe-netrc = "*"
sentry-sdk = {version = "*", extras = ["flask", "tornado"]}
service-identity = "*"  # We don't actually use this package, but it silences some annoying warnings from twistd.
voeventlib = ">=1.2"
werkzeug = ">=0.15.0"  # for werkzeug.middleware.proxy_fix.ProxyFix
zstandard = "*"  # for task compression

# For docs
pep517 = {version="*", optional=true}
sphinx = {version=">=4.0", optional=true}

# For tests
pytest-celery = {version="*", optional=true}
pytest-flask = {version="*", optional=true}
pytest-socket = {version="*", optional=true}

[tool.poetry.extras]
doc = ["pep517", "sphinx"]
test = ["pytest-celery", "pytest-flask", "pytest-socket"]

[tool.poetry.dev-dependencies]
ipython = "*"  # Include IPython for a nicer ``gwcelery shell`` experience.
ipykernel = "*"  # Include IPython kernel for Jupyter Lab support.
flower = ">=1"

[tool.poetry.scripts]
gwcelery = "gwcelery:main"
gwcelery-condor-submit-helper = "gwcelery.tools.condor_submit_helper:main"

[tool.poetry.plugins."celery.commands"]
condor = "gwcelery.tools.condor:condor"
flask = "gwcelery.tools.flask:flask"
nagios = "gwcelery.tools.nagios:nagios"

[tool.poetry-dynamic-versioning]
enable = true
bump = true

[tool.coverage.run]
source = ["gwcelery"]
omit = [
    "gwcelery/tests/*",
    "gwcelery/conf/development.py",
    "gwcelery/conf/playground.py",
    "gwcelery/conf/production.py",
    "gwcelery/conf/test.py"
]
parallel = true
concurrency = ["thread", "multiprocessing"]

[build-system]
requires = ["poetry_core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"
